---
import { getCollection } from "astro:content";
import { basename } from "node:path";

const posts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

const currentIndex = posts.findIndex((post) => {
  return basename(Astro.url.pathname) === post.id;
});

const nextPost = posts[currentIndex + 1];
const prevPost = posts[currentIndex - 1];
---

<aside class="mt-10 flex w-full flex-col gap-4 sm:flex-row">
  {
    nextPost && (
      <a
        href={`/blog/${nextPost.id}/`}
        class="group flex flex-1 grow flex-col border border-zinc-300 p-4 text-sm transition-all hover:border-zinc-900 dark:border-zinc-700 dark:hover:border-zinc-100"
      >
        <p class="mb-1 uppercase group-hover:text-zinc-700 group-hover:dark:text-zinc-300">
          &larr; Previous post
        </p>
        <p class="font-semibold text-zinc-700 dark:text-zinc-100">
          {nextPost.data.title}
        </p>
      </a>
    )
  }
  {
    prevPost && (
      <a
        href={`/blog/${prevPost.id}/`}
        class="group flex flex-1 grow flex-col border border-zinc-300 p-4 text-right text-sm transition-all hover:border-zinc-900 dark:border-zinc-700 dark:hover:border-zinc-100"
      >
        <p class="mb-1 uppercase group-hover:text-zinc-700 group-hover:dark:text-zinc-300">
          Next post &rarr;
        </p>
        <p class="font-semibold text-zinc-700 dark:text-zinc-100">
          {prevPost.data.title}
        </p>
      </a>
    )
  }
</aside>
