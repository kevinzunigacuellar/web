---
import { Icon } from "astro-icon/components";

interface Props {
  url: string;
  name: string;
  minimal?: boolean;
  description: string | null;
  stargazersCount: number;
  forksCount: number;
}

const {
  url,
  name,
  description,
  stargazersCount,
  forksCount,
  minimal = false,
} = Astro.props;

function formatNumbers(stars: number) {
  if (stars > 1000) {
    return `${(stars / 1000).toFixed(1)}k`;
  }
  return stars;
}
---

<li class="border p-2 dark:border-zinc-700 dark:bg-zinc-800">
  <h2>
    <a
      class="group inline-flex gap-1 font-medium hover:text-blue-600 dark:text-zinc-200 dark:hover:text-teal-400"
      href={url}
      >{name}<Icon
        name="external-link"
        class="opacity-0 duration-200 group-hover:-translate-y-0.5 group-hover:opacity-100"
      /></a
    >
  </h2>
  <ul class="mt-1 flex items-center gap-3 text-zinc-500 dark:text-zinc-400">
    <li class="inline-flex items-baseline gap-0.5">
      <Icon name="star" />{formatNumbers(stargazersCount)}
    </li>
    {
      forksCount > 0 && (
        <li class="inline-flex items-center gap-0.5">
          <Icon name="fork" />
          {formatNumbers(forksCount)}
        </li>
      )
    }
  </ul>
  {
    description && (
      <p
        class="leading-relaxed"
        class:list={{
          "sm:truncate": !minimal,
        }}
      >
        {description}
      </p>
    )
  }
</li>
